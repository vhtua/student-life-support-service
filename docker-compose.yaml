services:
  # Frontend service
  client:
    container_name: client_container
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3210:3210" # Mapping the React app to localhost:3000
    depends_on:
      - server
    environment:
      - REACT_APP_API_URL=http://localhost:3210 # Adjust the API URL

  # Backend service
  server:
    container_name: server_container
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3000:3000" # Mapping the Express app to localhost:3000
    depends_on:
      - db
      - redis
    environment:
      - PG_DB_USER=postgres                  # PostgreSQL user
      - PG_DB_HOST=db                        # PostgreSQL service name in Docker
      - PG_DB_PASSWORD=020402                # PostgreSQL password
      - PG_DB_PORT=5432                      # PostgreSQL default port
      - PG_DB_DATABASE=vgusls_db             # PostgreSQL database name
      - DATABASE_URL=postgres://postgres:020402@db:5432/vgusls_db
      - REDIS_HOST=redis  # Redis service name in Docker
      - REDIS_PORT=6379   # Default Redis port
    volumes:
      - ./server:/usr/src/app # Sync your backend code to the container
    # command: npm run start # Adjust the command to fit your app's start script

  # PostgreSQL database service
  db:
    container_name: db_container
    image: postgres:16.4-alpine
    restart: always
    environment:
    #   POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"  # Set the authentication method to md5
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "020402"
      POSTGRES_DB: vgusls_db
    ports:
      - "5555:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./server/database/vgusls_db_20241006_172939.sql:/docker-entrypoint-initdb.d/vgusls_db_20241006_172939.sql # Mount only the specific SQL file
  
  
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:8.12.0
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "8080:80"


  # Redis caching service
  redis:
    container_name: redis_container
    image: redis:6.2.14-alpine
    restart: always
    volumes:
      - redis_data:/data
    ports:
      - "7000:6379" # Mapping the Redis server to localhost:7000


  redis_insight:
    container_name: redis_insight_container
    image: redislabs/redisinsight:2.58.0
    restart: always
    ports:
      - "8081:5540"
    volumes:
      - redis_insight_data:/db



volumes:
  pgdata:
  redis_data:
  redis_insight_data:
